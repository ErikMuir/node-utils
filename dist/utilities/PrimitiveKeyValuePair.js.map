{"version":3,"sources":["../../src/utilities/PrimitiveKeyValuePair.js"],"names":["PrimitiveKeyValuePair","constructor","key","value","validateKey","validateValue","_key","_value","newValue","Error","TypeError","allowedTypes","includes"],"mappings":";;;;;;;AAAe,MAAMA,qBAAN,CAA4B;AACzCC,EAAAA,WAAW,CAACC,GAAD,EAAMC,KAAN,EAAa;AACtBC,IAAAA,WAAW,CAACF,GAAD,CAAX;AACAG,IAAAA,aAAa,CAACF,KAAD,CAAb;AAEA,SAAKG,IAAL,GAAYJ,GAAZ;AACA,SAAKK,MAAL,GAAcJ,KAAd;AACD;;AAED,MAAID,GAAJ,GAAU;AAAE,WAAO,KAAKI,IAAZ;AAAmB;;AAC/B,MAAIJ,GAAJ,CAAQM,QAAR,EAAkB;AAAE,UAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;AAAwC;;AAE5D,MAAIN,KAAJ,GAAY;AAAE,WAAO,KAAKI,MAAZ;AAAqB;;AACnC,MAAIJ,KAAJ,CAAUK,QAAV,EAAoB;AAClBH,IAAAA,aAAa,CAACG,QAAD,CAAb;AACA,SAAKD,MAAL,GAAcC,QAAd;AACD;;AAhBwC;;;;AAmB3C,MAAMJ,WAAW,GAAGF,GAAG,IAAI;AACzB,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3B,UAAM,IAAIQ,SAAJ,CAAc,6BAAd,CAAN;AACD;AACF,CAJD;;AAMA,MAAMC,YAAY,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,CAArB;;AAEA,MAAMN,aAAa,GAAGF,KAAK,IAAI;AAC7B,MAAI,CAACQ,YAAY,CAACC,QAAb,CAAsB,OAAOT,KAA7B,CAAL,EAA0C;AACxC,UAAM,IAAIO,SAAJ,CAAc,mDAAd,CAAN;AACD;AACF,CAJD","sourcesContent":["export default class PrimitiveKeyValuePair {\r\n  constructor(key, value) {\r\n    validateKey(key);\r\n    validateValue(value);\r\n\r\n    this._key = key;\r\n    this._value = value;\r\n  }\r\n\r\n  get key() { return this._key; }\r\n  set key(newValue) { throw new Error('Keys are read-only'); }\r\n\r\n  get value() { return this._value; }\r\n  set value(newValue) {\r\n    validateValue(newValue);\r\n    this._value = newValue;\r\n  }\r\n}\r\n\r\nconst validateKey = key => {\r\n  if (typeof key !== 'string') {\r\n    throw new TypeError('Keys must be of type string');\r\n  }\r\n};\r\n\r\nconst allowedTypes = ['string', 'number', 'boolean'];\r\n\r\nconst validateValue = value => {\r\n  if (!allowedTypes.includes(typeof value)) {\r\n    throw new TypeError('Values must be of type string, number, or boolean');\r\n  }\r\n};\r\n"],"file":"PrimitiveKeyValuePair.js"}