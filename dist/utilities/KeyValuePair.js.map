{"version":3,"sources":["../../src/utilities/KeyValuePair.js"],"names":["KeyValuePair","constructor","key","value","validateKey","_key","_value","newValue","Error","TypeError"],"mappings":";;;;;;;AAAe,MAAMA,YAAN,CAAmB;AAChCC,EAAAA,WAAW,CAACC,GAAD,EAAMC,KAAN,EAAa;AACtBC,IAAAA,WAAW,CAACF,GAAD,CAAX;AAEA,SAAKG,IAAL,GAAYH,GAAZ;AACA,SAAKI,MAAL,GAAcH,KAAd;AACD;;AAED,MAAID,GAAJ,GAAU;AAAE,WAAO,KAAKG,IAAZ;AAAmB;;AAC/B,MAAIH,GAAJ,CAAQK,QAAR,EAAkB;AAAE,UAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;AAAwC;;AAE5D,MAAIL,KAAJ,GAAY;AAAE,WAAO,KAAKG,MAAZ;AAAqB;;AACnC,MAAIH,KAAJ,CAAUI,QAAV,EAAoB;AAAE,SAAKD,MAAL,GAAcC,QAAd;AAAyB;;AAZf;;;;AAelC,MAAMH,WAAW,GAAGF,GAAG,IAAI;AACzB,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3B,UAAM,IAAIO,SAAJ,CAAc,6BAAd,CAAN;AACD;AACF,CAJD","sourcesContent":["export default class KeyValuePair {\r\n  constructor(key, value) {\r\n    validateKey(key);\r\n\r\n    this._key = key;\r\n    this._value = value;\r\n  }\r\n\r\n  get key() { return this._key; }\r\n  set key(newValue) { throw new Error('Keys are read-only'); }\r\n\r\n  get value() { return this._value; }\r\n  set value(newValue) { this._value = newValue; }\r\n}\r\n\r\nconst validateKey = key => {\r\n  if (typeof key !== 'string') {\r\n    throw new TypeError('Keys must be of type string');\r\n  }\r\n};\r\n"],"file":"KeyValuePair.js"}